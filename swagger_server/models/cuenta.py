# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.pedido import Pedido  # noqa: F401,E501
from swagger_server import util


class Cuenta(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_cuenta: str=None, valor: int=None, id_pedido: Pedido=None):  # noqa: E501
        """Cuenta - a model defined in Swagger

        :param id_cuenta: The id_cuenta of this Cuenta.  # noqa: E501
        :type id_cuenta: str
        :param valor: The valor of this Cuenta.  # noqa: E501
        :type valor: int
        :param id_pedido: The id_pedido of this Cuenta.  # noqa: E501
        :type id_pedido: Pedido
        """
        self.swagger_types = {
            'id_cuenta': str,
            'valor': int,
            'id_pedido': Pedido
        }

        self.attribute_map = {
            'id_cuenta': 'idCuenta',
            'valor': 'valor',
            'id_pedido': 'idPedido'
        }
        self._id_cuenta = id_cuenta
        self._valor = valor
        self._id_pedido = id_pedido

    @classmethod
    def from_dict(cls, dikt) -> 'Cuenta':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Cuenta of this Cuenta.  # noqa: E501
        :rtype: Cuenta
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_cuenta(self) -> str:
        """Gets the id_cuenta of this Cuenta.


        :return: The id_cuenta of this Cuenta.
        :rtype: str
        """
        return self._id_cuenta

    @id_cuenta.setter
    def id_cuenta(self, id_cuenta: str):
        """Sets the id_cuenta of this Cuenta.


        :param id_cuenta: The id_cuenta of this Cuenta.
        :type id_cuenta: str
        """
        if id_cuenta is None:
            raise ValueError("Invalid value for `id_cuenta`, must not be `None`")  # noqa: E501

        self._id_cuenta = id_cuenta

    @property
    def valor(self) -> int:
        """Gets the valor of this Cuenta.


        :return: The valor of this Cuenta.
        :rtype: int
        """
        return self._valor

    @valor.setter
    def valor(self, valor: int):
        """Sets the valor of this Cuenta.


        :param valor: The valor of this Cuenta.
        :type valor: int
        """
        if valor is None:
            raise ValueError("Invalid value for `valor`, must not be `None`")  # noqa: E501

        self._valor = valor

    @property
    def id_pedido(self) -> Pedido:
        """Gets the id_pedido of this Cuenta.


        :return: The id_pedido of this Cuenta.
        :rtype: Pedido
        """
        return self._id_pedido

    @id_pedido.setter
    def id_pedido(self, id_pedido: Pedido):
        """Sets the id_pedido of this Cuenta.


        :param id_pedido: The id_pedido of this Cuenta.
        :type id_pedido: Pedido
        """
        if id_pedido is None:
            raise ValueError("Invalid value for `id_pedido`, must not be `None`")  # noqa: E501

        self._id_pedido = id_pedido
